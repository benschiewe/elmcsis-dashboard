generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  accountId      String   @id @default(uuid())
  username       String   @unique
  hashedPassword String   @db.Char(60) // Exactly 60 characters for bcrypt
  email          String   @unique
  role           String
  createdAt      DateTime @default(now())
  lastLogin      DateTime?

  student        Student?
  professor      Professor?
}

model Student {
  accountId       String   @id
  firstName       String
  lastName        String
  startDate       DateTime?
  graduationDate  DateTime?

  account         Account  @relation(fields: [accountId], references: [accountId])
  studentCourses  StudentCourse[]
}

model Professor {
  accountId       String   @id
  firstName       String
  lastName        String
  officeLocation  String?

  account         Account  @relation(fields: [accountId], references: [accountId])
  courses         Course[]
}

model Course {
  courseId        String   @id @default(uuid())
  courseName      String   // Added courseName
  courseNumber    String
  professorEnumber String
  departmentId    String
  startDate       DateTime?
  endDate         DateTime?
  createdAt       DateTime @default(now())
  status          Int

  professor       Professor @relation(fields: [professorEnumber], references: [accountId])
  department      Department @relation(fields: [departmentId], references: [departmentId])
  studentCourses  StudentCourse[]
  resourceCourses ResourceCourse[]
}

model StudentCourse {
  enumber         String
  courseId        String
  enrollmentDate  DateTime

  student         Student @relation(fields: [enumber], references: [accountId])
  course          Course  @relation(fields: [courseId], references: [courseId])

  @@id([enumber, courseId])
}

model Resource {
  resourceId      String   @id @default(uuid())
  resourceName    String
  resourceType    String

  resourceCourses ResourceCourse[]
}

model ResourceCourse {
  resourceId      String
  courseId        String

  resource        Resource @relation(fields: [resourceId], references: [resourceId])
  course          Course   @relation(fields: [courseId], references: [courseId])

  @@id([resourceId, courseId])
}

model Department {
  departmentId          String   @id @default(uuid())
  departmentName        String
  departmentAbbreviation String

  courses               Course[]
}